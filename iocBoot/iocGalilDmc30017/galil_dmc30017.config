# Configuration of specific parameter of the device. Instead of defining the
# environment variables here, it is recommended to declare them when
# initializing the ioc.

# Parameters passed when running the IOC
epicsEnvSet("PREFIX",            "$(P)$(R)")      # PV name prefix

epicsEnvSet("VELO",              "$(VELO)")       # Default velocity
epicsEnvSet("VMAX",              "$(VMAX)")       # Default max velocity
epicsEnvSet("ACCL",              "$(ACCL)")       # Default acceleration period
epicsEnvSet("BDST",              "$(BDST)")       # Default backlash distance
epicsEnvSet("BVEL",              "$(BVEL)")       # Default backlash velocity
epicsEnvSet("BACC",              "$(BACC)")       # Default backlash acceleration period
epicsEnvSet("MRES",              "$(MRES)")       # Default motor resolution in EGU
epicsEnvSet("SREV",              "$(SREV)")       # Motor number of steps per revolution
epicsEnvSet("ERES",              "$(ERES)")       # Encoder resolution in EGU
epicsEnvSet("DHLM",              "$(DHLM)")       # Software high position limit
epicsEnvSet("DLLM",              "$(DLLM)")       # Software low position limit
epicsEnvSet("OFF",               "$(OFF)")        # User offset in EGU
epicsEnvSet("UEIP",              "$(UEIP)")       # Allow driver to Use encoder if present
epicsEnvSet("RTRY",              "$(RTRY)")       # Movement retry count
epicsEnvSet("NTM",               "$(NTM)")        # Allow motor to track new target position or wait previous move to finish
epicsEnvSet("MTRTYPE",           "$(MTRTYPE)")    # Motor type
epicsEnvSet("MTRON",             "$(MTRON)")      # Configure motor to start powered on/off
epicsEnvSet("EGU",               "$(EGU)")        # Engineering units used
epicsEnvSet("DEFAULT_HOMETYPE",  "$(DEFAULT_HOMETYPE)")  # Default home switch type, normal open (NO) or normal closed (NC)
epicsEnvSet("DEFAULT_LIMITTYPE", "$(DEFAULT_LIMITTYPE)") # Default limit switch type, normal open (NO) or normal closed (NC)

# High level parameters passed when running the IOC
epicsEnvSet("AMP_GAIN",          "$(AMP_GAIN)")   # Amplifier gain (forced if set)
epicsEnvSet("DIR",               "$(DIR)")        # User direction (forced if set)
epicsEnvSet("ENC_TYPE",          "$(ENC_TYPE)")   # Encoder type (forced if set)
epicsEnvSet("BISS_POLL",         "$(BISS_POLL)")  # BiSS Poll enable (forced if set)
epicsEnvSet("BISS_CLKDIV",       "$(BISS_CLKDIV)")  # BiSS clock divider (forced if set)
epicsEnvSet("BISS_DATA1",        "$(BISS_DATA1)")   # BiSS data 1 (forced if set)
epicsEnvSet("BISS_DATA2",        "$(BISS_DATA2)")   # BiSS data 2 (forced if set)
epicsEnvSet("BISS_ZEROPAD",      "$(BISS_ZEROPAD)") # BiSS zero padding (forced if set)
epicsEnvSet("BISS_INPUT",        "$(BISS_INPUT)") # BiSS input (forced if set)
epicsEnvSet("BISS_LEVEL",        "$(BISS_LEVEL)") # BiSS level (forced if set)

# Hard-coded parameters
epicsEnvSet("PORT",              "Galil")         # Port name used by Galil Driver

epicsEnvSet("M",                 "A")             # Motor name = A

epicsEnvSet("PREC",              "6")             # Precision for records with this field

# Hard-coded I/O Port record names
epicsEnvSet("DIG_OUT0",          "DigOut0")       # Digital output 0 name
epicsEnvSet("DIG_OUT1",          "DigOut1")       # Digital output 1 name
epicsEnvSet("DIG_OUT2",          "DigOut2")       # Digital output 2 name
epicsEnvSet("DIG_OUT3",          "DigOut3")       # Digital output 3 name

epicsEnvSet("DIG_IN0",           "DigIn0")        # Digital input 0 name
epicsEnvSet("DIG_IN1",           "DigIn1")        # Digital input 1 name
epicsEnvSet("DIG_IN2",           "DigIn2")        # Digital input 2 name
epicsEnvSet("DIG_IN3",           "DigIn3")        # Digital input 3 name
epicsEnvSet("DIG_IN4",           "DigIn4")        # Digital input 4 name
epicsEnvSet("DIG_IN5",           "DigIn5")        # Digital input 5 name
epicsEnvSet("DIG_IN6",           "DigIn6")        # Digital input 6 name
epicsEnvSet("DIG_IN7",           "DigIn7")        # Digital input 7 name

epicsEnvSet("ANALOG_IN0",        "AnalogIn0")     # Analog input 0 name
epicsEnvSet("ANALOG_IN1",        "AnalogIn1")     # Analog input 1 name

epicsEnvSet("ANALOG_OUT0",       "AnalogOut0")    # Analog output 0 name
epicsEnvSet("ANALOG_OUT1",       "AnalogOut1")    # Analog output 1 name
